<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
		
	
	 <!-- add one more component-scan for enabling the frontend to recognize the CategoryDAO property, it would search all the annotations inside the backend project -->	
	<context:component-scan base-package="com.johnwu.onlineStoreBackEnd" />
	
	
	<http pattern="/resources/**" security="none" />
	
	
	<!-- we want to match all the urls, so we need to use double '*' -->
	<http>
		<intercept-url pattern="/cart/**" access="hasAuthority('USER')" />
		<intercept-url pattern="/**" access="permitAll" />
		<!-- this will cause the web app to generate a login form before reaching the main page -->
		<form-login login-page="/login" />
		<access-denied-handler error-page="/access-denied" />
	</http>

	<!-- add the authentication manager -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email, password, enabled from user_detail where email = ?"
				authorities-by-username-query="select email, role from user_detail where email = ?"
			/>
		</authentication-provider>
	</authentication-manager>

</beans:beans>